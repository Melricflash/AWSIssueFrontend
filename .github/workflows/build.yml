name: Push Docker Image to Public ECR
on:
  push:
    branches:
      - main

jobs:
  Test: # Job to run Flask tests
    name: Run Flask Tests with pytest
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
        
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run application tests
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          pytest --disable-warnings

  Build:
    name: Build
    runs-on: ubuntu-latest
    needs: Test # Ensure that tests pass first

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Build, tag and push image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
          IMAGE_TAG: msfrontend
          ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI}}
        run: |
          docker build -t $ECR_REPOSITORY_URI:$IMAGE_TAG .
          docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
        
      - name: Run Trivy scanner on image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ secrets.ECR_REPOSITORY_URI }}:${{ secrets.IMAGE_TAG }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          




             
                


